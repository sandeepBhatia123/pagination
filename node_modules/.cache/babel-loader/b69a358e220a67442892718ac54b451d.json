{"ast":null,"code":"var _jsxFileName = \"/home/administrator/Desktop/pagination/src/Routes/pagination.js\";\nimport React from 'react';\n\nconst PagiNation = () => {\n  getPager(totalItems, currentPage, pageSize); // default to first page\n\n  currentPage = currentPage || 1; // default page size is 10\n\n  pageSize = pageSize || 10; // calculate total pages\n\n  var totalPages = Math.ceil(totalItems / pageSize);\n  var startPage, endPage;\n\n  if (totalPages <= 10) {\n    // less than 10 total pages so show all\n    startPage = 1;\n    endPage = totalPages;\n  } else {\n    // more than 10 total pages so calculate start and end pages\n    if (currentPage <= 6) {\n      startPage = 1;\n      endPage = 10;\n    } else if (currentPage + 4 >= totalPages) {\n      startPage = totalPages - 9;\n      endPage = totalPages;\n    } else {\n      startPage = currentPage - 5;\n      endPage = currentPage + 4;\n    }\n  } // calculate start and end item indexes\n\n\n  var startIndex = (currentPage - 1) * pageSize;\n  var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1); // create an array of pages to ng-repeat in the pager control\n\n  var pages = [...Array(endPage + 1 - startPage).keys()].map(i => startPage + i); // return an object with all pager properties required by the view\n\n  console.log(pages);\n  return {\n    totalItems: totalItems,\n    currentPage: currentPage,\n    pageSize: pageSize,\n    totalPages: totalPages,\n    startPage: startPage,\n    endPage: endPage,\n    startIndex: startIndex,\n    endIndex: endIndex,\n    pages: pages\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default PagiNation;","map":{"version":3,"sources":["/home/administrator/Desktop/pagination/src/Routes/pagination.js"],"names":["React","PagiNation","getPager","totalItems","currentPage","pageSize","totalPages","Math","ceil","startPage","endPage","startIndex","endIndex","min","pages","Array","keys","map","i","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAOE,MAAMC,UAAU,GAAG,MAAK;AACtBC,EAAAA,QAAQ,CAACC,UAAD,EAAaC,WAAb,EAA0BC,QAA1B,CAAR,CADsB,CAGlB;;AAEOD,EAAAA,WAAW,GAAGA,WAAW,IAAI,CAA7B,CALW,CAQX;;AAEAC,EAAAA,QAAQ,GAAGA,QAAQ,IAAI,EAAvB,CAVW,CAaX;;AAEA,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUL,UAAU,GAAGE,QAAvB,CAAjB;AAGA,MAAII,SAAJ,EAAeC,OAAf;;AAEA,MAAIJ,UAAU,IAAI,EAAlB,EAAsB;AAElB;AAEAG,IAAAA,SAAS,GAAG,CAAZ;AAEAC,IAAAA,OAAO,GAAGJ,UAAV;AAEH,GARD,MAQO;AAEH;AAEA,QAAIF,WAAW,IAAI,CAAnB,EAAsB;AAElBK,MAAAA,SAAS,GAAG,CAAZ;AAEAC,MAAAA,OAAO,GAAG,EAAV;AAEH,KAND,MAMO,IAAIN,WAAW,GAAG,CAAd,IAAmBE,UAAvB,EAAmC;AAEtCG,MAAAA,SAAS,GAAGH,UAAU,GAAG,CAAzB;AAEAI,MAAAA,OAAO,GAAGJ,UAAV;AAEH,KANM,MAMA;AAEHG,MAAAA,SAAS,GAAGL,WAAW,GAAG,CAA1B;AAEAM,MAAAA,OAAO,GAAGN,WAAW,GAAG,CAAxB;AAEH;AAEJ,GApDU,CAwDX;;;AAEA,MAAIO,UAAU,GAAG,CAACP,WAAW,GAAG,CAAf,IAAoBC,QAArC;AAEA,MAAIO,QAAQ,GAAGL,IAAI,CAACM,GAAL,CAASF,UAAU,GAAGN,QAAb,GAAwB,CAAjC,EAAoCF,UAAU,GAAG,CAAjD,CAAf,CA5DW,CAgEX;;AAEA,MAAIW,KAAK,GAAG,CAAC,GAAGC,KAAK,CAAEL,OAAO,GAAG,CAAX,GAAgBD,SAAjB,CAAL,CAAiCO,IAAjC,EAAJ,EAA6CC,GAA7C,CAAiDC,CAAC,IAAIT,SAAS,GAAGS,CAAlE,CAAZ,CAlEW,CAqEX;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AAEA,SAAO;AAEHX,IAAAA,UAAU,EAAEA,UAFT;AAIHC,IAAAA,WAAW,EAAEA,WAJV;AAMHC,IAAAA,QAAQ,EAAEA,QANP;AAQHC,IAAAA,UAAU,EAAEA,UART;AAUHG,IAAAA,SAAS,EAAEA,SAVR;AAYHC,IAAAA,OAAO,EAAEA,OAZN;AAcHC,IAAAA,UAAU,EAAEA,UAdT;AAgBHC,IAAAA,QAAQ,EAAEA,QAhBP;AAkBHE,IAAAA,KAAK,EAAEA;AAlBJ,GAAP;AAuBT,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKH,CApGD;;AAqGA,eAAeb,UAAf","sourcesContent":["import React from 'react'\n\n\n\n\n\n\n  const PagiNation = () =>{\n    getPager(totalItems, currentPage, pageSize) \n\n        // default to first page\n        \n               currentPage = currentPage || 1;\n        \n        \n               // default page size is 10\n        \n               pageSize = pageSize || 10;\n        \n        \n               // calculate total pages\n        \n               var totalPages = Math.ceil(totalItems / pageSize);\n        \n        \n               var startPage, endPage;\n        \n               if (totalPages <= 10) {\n        \n                   // less than 10 total pages so show all\n        \n                   startPage = 1;\n        \n                   endPage = totalPages;\n        \n               } else {\n        \n                   // more than 10 total pages so calculate start and end pages\n        \n                   if (currentPage <= 6) {\n        \n                       startPage = 1;\n        \n                       endPage = 10;\n        \n                   } else if (currentPage + 4 >= totalPages) {\n        \n                       startPage = totalPages - 9;\n        \n                       endPage = totalPages;\n        \n                   } else {\n        \n                       startPage = currentPage - 5;\n        \n                       endPage = currentPage + 4;\n        \n                   }\n        \n               }\n        \n        \n        \n               // calculate start and end item indexes\n        \n               var startIndex = (currentPage - 1) * pageSize;\n        \n               var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n        \n        \n        \n               // create an array of pages to ng-repeat in the pager control\n        \n               var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\n        \n        \n               // return an object with all pager properties required by the view\n               console.log(pages)\n        \n               return {\n        \n                   totalItems: totalItems,\n        \n                   currentPage: currentPage,\n        \n                   pageSize: pageSize,\n        \n                   totalPages: totalPages,\n        \n                   startPage: startPage,\n        \n                   endPage: endPage,\n        \n                   startIndex: startIndex,\n        \n                   endIndex: endIndex,\n        \n                   pages: pages\n        \n               };\n        \n           \n      return(\n        <div>\n\n        </div>\n      )\n  }\n  export default PagiNation;"]},"metadata":{},"sourceType":"module"}